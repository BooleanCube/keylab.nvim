# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
          
      # Codecov coverage reports
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup vim
        uses: rhysd/action-setup-vim@v1.2.13
        id: vim
        with:
          version: v9.0.0815

      - name: Setup neovim
        id: nvim
        uses: rhysd/action-setup-vim@v1.2.13
        with:
          neovim: true

      - name: Install Dependencies
        run: |
          yarn global add bytes
          yarn install --frozen-lockfile
          sudo apt-get install -y xclip ripgrep exuberant-ctags
          xclip -version
          rg --version
          ctags --version
          vim --version
          nvim --version

      - name: Run jest
        env:
          VIM_COMMAND: ${{ steps.vim.outputs.executable }}
          NVIM_COMMAND: ${{ steps.nvim.outputs.executable }}
        run: |
          node --max-old-space-size=4096 --expose-gc ./node_modules/.bin/jest --maxWorkers=2 --coverage --forceExit

      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        if: ${{ matrix.ENABLE_CODE_COVERAGE }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true

  test:
    if: github.event.pull_request.draft == false
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node:
          - "16"
          - "14"
        include:
          # only enable coverage on the fastest job
          - node: "16"
            ENABLE_CODE_COVERAGE: true

    env:
      NODE_ENV: test
